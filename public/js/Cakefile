fs     = require 'fs'
{exec} = require 'child_process'

appFiles  = [
  # omit src/ and .coffee to make the below lines a little shorter
  'BoardController',
  'Board',
  'FootballBoard',
  'PitchElement',
  'PlayersTable',
  'Toolbar',
  'Player',
  'PlayerArrow',
  'Plain',
  'Arrow',
  'Path',
  'CanvasUtils',
  'Views'
]


task 'build', 'Build single application file from source files', ->
  appContents = new Array remaining = appFiles.length
  for file, index in appFiles then do (file, index) ->
    fs.readFile "tacticBoard/#{file}.coffee", 'utf8', (err, fileContents) ->
      if err
        return
      appContents[index] = fileContents
      process() if --remaining is 0
  process = ->
    fs.writeFile 'tacticBoardApp.coffee', appContents.join('\n\n'), 'utf8', (err) ->
      if err
        return
      exec 'coffee --compile tacticBoardApp.coffee', (err, stdout, stderr) ->
        if err
          console.log 'Error while compiling'
        else
          fs.unlink 'tacticBoardApp.coffee', (err) ->
            if err
              return
          console.log 'Done.'

task 'watch', 'Watch prod source files and build changes', ->
    invoke 'build'
    console.log "Watching for changes in src"

    for file in appFiles then do (file) ->
        fs.watch "tacticBoard/#{file}.coffee", (curr, prev) ->
            if +curr.mtime isnt +prev.mtime
                console.log "Saw change in #{file}"
                console.log 'Whoa. Saw a change. Building. Hold plz.'
                invoke 'build'
                
task 'minify', 'Minify the resulting application file after build', ->
  exec 'java -jar "/home/stan/public/compiler.jar" --js lib/app.js --js_output_file lib/app.production.js', (err, stdout, stderr) ->
    throw err if err
    console.log stdout + stderr